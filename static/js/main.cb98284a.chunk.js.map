{"version":3,"sources":["Components/Search.js","Components/Toggle.js","Components/WeatherStyles.js","Components/WeatherIcon.js","Components/WeatherWind.js","Components/LocationDetails.js","Components/WeatherToday.js","Components/WeatherTom.js","Components/WeatherDayAfterTom.js","Containers/App.js","actions.js","constants.js","Containers/Styles.js","serviceWorker.js","reducers.js","index.js"],"names":["useStyles","makeStyles","theme","margin","marginTop","spacing","borderRadius","background","boxShadow","padding","dropDown","opactiy","Search","searchWeather","onHandleSearchChange","getLocation","classes","Grid","item","xs","style","position","onSubmit","className","container","alignItems","alignContent","TextField","paddingRight","onChange","id","placeholder","Button","type","onClick","root","width","height","switchBase","transform","color","palette","common","white","backgroundColor","opacity","border","thumb","track","grey","transition","transitions","create","checked","Toggle","useState","toggleOn","setToggleOn","FormGroup","aria-label","row","FormControlLabel","value","control","Switch","size","e","console","log","name","inputProps","label","Typography","variant","labelPlacement","WeatherStyles","flexGrow","paper","textAlign","display","justifyContent","text","secondary","textTransform","paperSelected","paperLocationDetails","WeatherIcon","weatherData","weatherDataLoaded","Paper","src","weather","icon","alt","useStyle","WeatherWind","fontSize","wind_deg","wind_speed","LocationDetails","setDate","location","elevation","Math","round","temp","day","description","Date","sunrise","getHours","getMinutes","sunset","WeatherToday","currentSelected","onHandleSelected","select","setSelect","useEffect","getDate","getDay","App","setState","target","calculateDate","preventDefault","searchLocation","props","searchField","getCoords","componentDidMount","a","state","navigator","geolocation","getCurrentPosition","showPosition","showPositionError","error","code","PERMISSION_DENIED","alert","POSITION_UNAVAILABLE","TIMEOUT","UNKNOWN_ERROR","currentLatPosition","coords","latitude","currentLondPosition","longitude","getWeatherGeo","getLoctionFromCoords","lat","long","url","fetch","response","json","data","results","components","suburb","geometry","lng","daily","todayWeather","tomorrowWeather","dayAfterTomWeather","chosenDay","days","months","date","tomorrow","x","dayAfterTomorrow","getMonth","getFullYear","this","justify","WeatherTom","WeatherDayAfterTom","Component","connect","dispatch","event","payload","withStyles","flexDirection","Boolean","window","hostname","match","initialState","store","createStore","action","ReactDOM","render","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.cb98284a.chunk.js","sourcesContent":["import React from 'react';\nimport { Grid, makeStyles, TextField, Button } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport SendIcon from '@material-ui/icons/DoubleArrowRounded';\nimport LocationIcon from '@material-ui/icons/MyLocation';\n\nconst useStyles = makeStyles((theme) => ({\n    \n    margin: {\n        marginTop: theme.spacing(3),\n        borderRadius: '10px',\n        background: '#ecf0f3',\n        boxShadow: 'inset 3px 3px 5px #8e9092,inset -3px -3px 5px #ffffff',\n        padding: '.5rem',\n    },\n    dropDown: {\n        borderRadius: '20px',\n        opactiy: '0.25'\n    }\n  }));\n\n  \n\nconst Search = ({searchWeather, onHandleSearchChange, getLocation}) => {\n    const classes = useStyles();\n\n\n      const getUserLocation = () => {\n        getLocation()\n      };\n\n\n    return(\n        <Grid item xs={7} style={{position: 'relative'}}>\n            <form onSubmit={searchWeather} >\n                <div className={classes.margin}> \n                        <Grid container spacing={1} alignItems='flex-end' alignContent=\"space-between\">\n                            <Grid item xs={2} >\n                                <SearchIcon />\n                            </Grid>\n                            <Grid item xs={7} >\n                                <TextField  \n                                    style={{marginTop: '-.5rem', paddingRight: '.5rem'}} \n                                    onChange={onHandleSearchChange} \n                                    id=\"search\"\n                                    placeholder='Search'\n                                    />\n                            </Grid>\n                            <Grid item xs={2}>\n                                <Button type='submit'><SendIcon/></Button>\n                                {/* <Button onClick={getUserLocation}><SendIcon/></Button> */}\n                            </Grid>\n                            <Grid item xs={1} >\n                                {/* <Button type='submit'><SendIcon/></Button> */}\n                                <Button onClick={getUserLocation}><LocationIcon/></Button>\n                            </Grid>\n                                \n                        </Grid>\n                </div>\n            </form>\n        </Grid>\n    )\n};\n\nexport default Search;","import React, { useState } from 'react';\nimport { Grid, Switch, makeStyles, Typography } from '@material-ui/core';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\n\nconst useStyles = makeStyles((theme) => ({\n    margin: {\n      marginTop: theme.spacing(2),\n    },\n    root: {\n        width: 60,\n        height: 20,\n        padding: 0,\n        margin: theme.spacing(1),\n      },\n      switchBase: {\n        padding: 0,\n        '&$checked': {\n          transform: 'translateX(40px)',\n          color: theme.palette.common.white,\n          '& + $track': {\n            backgroundColor: '#52d869',\n            opacity: 1,\n            border: 'none',\n          },\n        },\n        '&$focusVisible $thumb': {\n          color: '#52d869',\n          border: '6px solid #fff',\n        },\n      },\n      thumb: {\n        width: 20,\n        height: 20,\n      },\n      track: {\n        borderRadius: 26 / 2,\n        border: `1px solid ${theme.palette.grey[400]}`,\n        backgroundColor: '#666666',\n        opacity: 1,\n        transition: theme.transitions.create(['background-color', 'border']),\n      },\n      checked: {},\n  })); \n\nconst Toggle = () => {\n\n    const classes = useStyles()\n\n    const [toggleOn, setToggleOn ] = useState(true)\n\n    const handleToggleSwitch = e => {\n        setToggleOn(!toggleOn)\n        console.log(toggleOn)\n    }\n\n    const toggleText = () => {\n        return toggleOn? 'Light' : 'Dark'\n    }  \n\n    return(\n        <Grid item xs={3}>\n            <div className={classes.margin}>\n                <Grid container alignItems='flex-end' >\n                    <Grid item xs={12}>\n                        <FormGroup aria-label=\"position\" row>\n                            <FormControlLabel\n                                value=\"top\"\n                                control={<Switch\n                                            classes={{\n                                                root: classes.root,\n                                                switchBase: classes.switchBase,\n                                                thumb: classes.thumb,\n                                                track: classes.track,\n                                                checked: classes.checked,\n                                            }}\n                                            size='medium'\n                                            checked={toggleOn}\n                                            onChange={handleToggleSwitch}\n                                            name=\"checkedA\"\n                                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                                        />}\n                                label={<Typography variant='button'>{toggleText()}</Typography>}\n                                labelPlacement=\"top\"\n                            />\n                        </FormGroup>\n                    </Grid>\n                    {/* <Grid item xs={12}>\n                        <Typography style={{fontSize: '.6rem'}} variant='button'> { toggleOn?  'Light' : 'Dark' }</Typography>\n                    </Grid> */}\n                    \n                </Grid>\n            </div>\n        </Grid>\n    )\n};\n\nexport default Toggle;","export const WeatherStyles = (theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      marginTop: '2rem',\n      padding: theme.spacing(1),\n      textAlign: 'center',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      color: theme.palette.text.secondary,\n      textTransform: 'uppercase',\n      height: '8vh',\n      borderRadius: '20px',\n      background: 'linear-gradient(145deg, #d4d8db, #fdffff)',\n      boxShadow:  '5px 5px 10px #8e9092, -5px -5px 10px #ffffff'\n    },\n    paperSelected: {\n      marginTop: '2rem',\n      padding: theme.spacing(1),\n      textAlign: 'center',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      color: 'white',\n      textTransform: 'uppercase',\n      height: '8vh',\n      borderRadius: '20px',\n      background: '#81859C',\n      boxShadow:  'inset 5px 5px 10px #272932, inset -5px -5px 10px #A4A7B7'\n    },\n    paperLocationDetails: {\n      display: 'flex',\n      alignItems: 'space-around',\n      marginTop: '2rem',\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n      height: '30vh',\n      borderRadius: '20px',\n      background: 'linear-gradient(145deg, #d4d8db, #fdffff)',\n      boxShadow:  '5px 5px 10px #8e9092, -5px -5px 10px #ffffff'\n    }\n  });\n\n  ","import React from 'react';\nimport { Grid, Paper, makeStyles, Typography } from '@material-ui/core';\nimport { WeatherStyles } from './WeatherStyles';\n\nconst useStyles = makeStyles(WeatherStyles)\n\nconst WeatherIcon = ({weatherData, weatherDataLoaded}) => {\n\n    const  classes  = useStyles()\n\n    const weatherIcon = () => {\n        return weatherDataLoaded? \n            weatherData.weather[0].icon : '50n'\n            \n    }\n\n\n    return(\n        <Grid item xs={6} className={classes.root} >\n            <Paper className={classes.paper}>\n                <Typography variant='button'>\n                    \n                    <img src={`http://openweathermap.org/img/wn/${weatherIcon()}@2x.png`} alt='weatherIcon'/> \n                </Typography>\n            </Paper>\n        </Grid>\n    )\n};\n\nexport default WeatherIcon;","import React from 'react';\nimport { Grid, Paper, makeStyles, Typography } from '@material-ui/core';\nimport { WeatherStyles } from './WeatherStyles';\nimport ArrowIcon from '@material-ui/icons/ArrowUpward';\n\nconst useStyle = makeStyles(WeatherStyles)\n\nconst WeatherWind = ({weatherData, weatherDataLoaded}) => {\n\n    const classes = useStyle()\n\n    const weatherWind = () => {\n        return weatherDataLoaded? \n            `${weatherData.wind_speed} mph` : ''\n            \n    }\n\n    const arrow = () => {\n        return weatherDataLoaded? \n            <ArrowIcon style={{fontSize: '3rem', transform: `rotate(${weatherData.wind_deg}deg)`}}/> : <ArrowIcon style={{fontSize: '4rem'}}/>\n    }\n\n    return(\n        <Grid item xs={6} className={classes.root}>\n            <Paper className={classes.paper}>\n                <Grid container>\n                    <Grid item xs={12}>\n                        {arrow()}\n                    </Grid>\n                    <Grid item xs={12}>\n                    <Typography variant='button'>{weatherWind()}</Typography>\n                    </Grid>\n                </Grid>\n            </Paper>\n        </Grid>\n    )\n};\n\nexport default WeatherWind;","import React from 'react';\nimport { Grid, Paper, makeStyles, Typography } from '@material-ui/core';\nimport { WeatherStyles } from './WeatherStyles';\n\nconst useStyle = makeStyles(WeatherStyles)\n\n\n\nconst LocationDetails = ({setDate, weatherData, location, weatherDataLoaded}) => {\n\n    const classes = useStyle();\n\n\n\n    \n\n    // const isWeatherLoaded = \n    //     if(weather) {\n    //         Object.assign( weatherOBJ, {\n                // temp: <Typography variant='h1'>{Math.round(weather.temp.day)}°C</Typography>,\n                // location: '',\n                // desc: weather.weather[0].description,\n                // sunrise: new Date( weather.sunrise * 1000 ),\n                // sunset: new Date( weather.sunset * 1000 )\n    //         })\n    //     }\n\n\n        // return weather? \n        //     <Typography variant='h1'>{Math.round(weather.temp.day)}°C</Typography> \n        //    : <Typography variant='h3'>Loading</Typography>\n        // }\n    \n\n    return(\n        <Grid item xs={12} style={{textTransform: 'uppercase'}}>\n            <Paper elevation={3} className={classes.paperLocationDetails}>\n                <Grid container spacing={1}>\n                    <Grid item xs={12}>\n                        <Typography variant='button'>{ setDate }</Typography>\n                    </Grid>\n                    <Grid item xs={12}>\n                        {weatherDataLoaded?\n                        <Typography variant='h2'> {Math.round(weatherData.temp.day)}°C</Typography>\n                        :\n                        <Typography variant='h4'>Loading</Typography>\n                        }\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Typography variant='button'>{ weatherDataLoaded? location : 'Loading'}</Typography>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Typography variant='h6'>{ weatherDataLoaded? weatherData.weather[0].description : 'Loading'}</Typography>\n                    </Grid>\n                    <Grid container style={{marginTop: '.5rem'}}>\n                        <Grid item xs={6}>\n                            <Typography variant='button'>Sunrise: { weatherDataLoaded? `${new Date( weatherData.sunrise * 1000).getHours()}:${new Date( weatherData.sunrise * 1000).getMinutes()}`: 'Loading'}</Typography>\n\n                        </Grid>\n                        <Grid item xs={6}>\n                        <Typography variant='button'>Sunset: { weatherDataLoaded? `${new Date( weatherData.sunset * 1000).getHours()}:${new Date( weatherData.sunset * 1000).getMinutes()}`: 'Loading'}</Typography>\n                        </Grid>\n                        {/* <Grid container style={{marginTop: '1rem'}}>\n                            <Grid item xs={12}>\n                                <Typography variant='caption'>Click Here For More Info...</Typography>\n                            </Grid>\n                        </Grid> */}\n                    </Grid>\n                </Grid>\n            </Paper>\n        </Grid>\n    )\n};\n\nexport default LocationDetails;","import React, { useState, useEffect  } from 'react';\nimport { Grid, Paper, makeStyles } from '@material-ui/core';\nimport { WeatherStyles } from './WeatherStyles';\n\nconst useStyles = makeStyles(WeatherStyles)\n\nconst WeatherToday = ({currentSelected, onHandleSelected}) => {\n\n    const  classes  = useStyles()\n    const [select, setSelect] = useState(true);\n\n    useEffect( () => {\n        if(currentSelected === 'today') {\n            setSelect(true)\n        } else {\n            setSelect( false)\n        }\n    },[currentSelected] )\n\n    \n    return(\n        <Grid  item xs={4} className={classes.root} >\n            <Paper \n                onClick={onHandleSelected} \n                id='today' \n                className={ select ? classes.paperSelected : classes.paper}\n                    >Today <br/> <br/> {new Date().getDate()}\n                    \n                    \n            </Paper>        \n        </Grid>\n    )\n};\n\nexport default WeatherToday;","import React, { useState, useEffect } from 'react';\nimport { Grid, Paper, makeStyles } from '@material-ui/core';\nimport { WeatherStyles } from './WeatherStyles';\n\nconst useStyles = makeStyles(WeatherStyles)\n\nconst WeatherToday = ({currentSelected, onHandleSelected}) => {\n\n    const  classes  = useStyles()\n    const [select, setSelect] = useState(false);\n\n    useEffect( () => {\n        if(currentSelected === 'tomorrow') {\n            setSelect(true)\n        } else {\n            setSelect( false)\n        }\n    },[currentSelected] )\n    \n\n    return(\n        <Grid  item xs={4} className={classes.root} >\n            <Paper \n                onClick={onHandleSelected} \n                id='tomorrow' \n                className={ select ? classes.paperSelected : classes.paper}\n                    >Tomorrow <br/> <br/> {new Date().getDate()+1}\n                       \n            </Paper>\n        </Grid>\n    )\n};\n\nexport default WeatherToday;","import React, { useState, useEffect } from 'react';\nimport { Grid, Paper, makeStyles } from '@material-ui/core';\nimport { WeatherStyles } from './WeatherStyles';\n\nconst useStyles = makeStyles(WeatherStyles)\n\nconst WeatherToday = ({currentSelected, onHandleSelected}) => {\n\n    const  classes  = useStyles()\n    const [select, setSelect] = useState(false);\n\n    useEffect( () => {\n        if(currentSelected === 'dayAfterTomorrow') {\n            setSelect(true)\n        } else {\n            setSelect( false)\n        }\n    },[currentSelected] )\n\n    const calculateDay = () => {\n        const days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n        return days[new Date().getDay()+2]\n    }\n\n    return(\n        <Grid item xs={4} className={classes.root} >\n            <Paper \n                onClick={onHandleSelected} \n                id='dayAfterTomorrow' \n                className={ select ? classes.paperSelected : classes.paper}\n                    >{calculateDay()}<br/><br/>{new Date().getDate()+2}\n                        \n            </Paper>        \n        </Grid>\n    )\n};\n\nexport default WeatherToday;","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport { setSearchField } from '../actions';\nimport Search from '../Components/Search';\nimport { Styles } from './Styles';\nimport { Grid, Paper, withStyles } from '@material-ui/core';\nimport Toggle from '../Components/Toggle';\nimport WeatherIcon from '../Components/WeatherIcon';\nimport WeatherWind from '../Components/WeatherWind';\nimport LocationDetails from '../Components/LocationDetails';\nimport WeatherToday from '../Components/WeatherToday';\nimport WeatherTom from '../Components/WeatherTom';\nimport WeatherDayAfterTom from '../Components/WeatherDayAfterTom';\n\nconst API_KEY = `6f59aafd13d9cd8666b8c2261057b8fa`;\n\nconst mapStateToProps = state => {\n    return {\n        searchField: state.searchField\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return { \n        onHandleSearchChange: (event) => dispatch(setSearchField(event.target.value))\n    }\n}\n\nclass App extends Component{\n    constructor(){\n        super()\n        this.state = {\n            searchLocation: '',\n            currentSelected: 'today',\n            weatherDataLoaded: false,\n            setDate: '',\n            currentLatPosition: '',\n            currentLondPosition: '', \n            weatherData: '',\n            todayWeather: '',\n            tomorrowWeather: '',\n            dayAfterTomWeather: '',\n            location: '',\n        }\n    }\n\n    onHandleSelected = (e) => {\n        this.setState({currentSelected: e.target.id})\n        this.calculateDate(e.target.id)\n    }\n\n    searchWeather = (e) => {\n        e.preventDefault()\n        this.setState({\n            searchLocation: this.props.searchField\n        })\n        console.log('Get This', this.props.searchField)\n        this.getCoords(this.props.searchField)\n    }\n\n\n    componentDidMount = async () => {\n        await this.calculateDate(this.state.currentSelected)\n        await this.getLocation()\n        // await this.getAllData(this.state.currentLatPosition, this.state.currentLondPosition)\n    }\n  \n    getLocation = async () => {\n       if(navigator.geolocation){\n           await navigator.geolocation.getCurrentPosition(this.showPosition, this.showPositionError )\n       } \n       \n    }\n\n    showPositionError = error => {\n        switch(error.code) {\n            case error.PERMISSION_DENIED:\n              alert(\"Please Enable Location For Accurate Weather Reports\")\n              break;\n            case error.POSITION_UNAVAILABLE:\n              alert(\"Location information is unavailable.\")\n              break;\n            case error.TIMEOUT:\n              alert(\"The request to get user location timed out.\")\n              break;\n            case error.UNKNOWN_ERROR:\n              alert(\"An unknown error occurred.\")\n              break;\n            default :\n            alert('Unavailable')\n          }\n    }\n\n    showPosition =  position => {\n        this.setState({\n            currentLatPosition: position.coords.latitude,\n            currentLondPosition: position.coords.longitude\n        })\n        console.log('Got the Coords')\n\n        this.getWeatherGeo(position.coords.latitude, position.coords.longitude )\n        this.getLoctionFromCoords(position.coords.latitude, position.coords.longitude )\n        \n\n    }\n\n    //Get location name if data from Coords\n    getLoctionFromCoords = async (lat, long) => {\n        const url =  `https://api.opencagedata.com/geocode/v1/json?q=${lat}+${long}&key=6190521cf6754408a69404ac72161310`;\n        const response = await fetch(url)\n        const data = await response.json()\n        this.setState({\n            location: data.results[0].components.suburb\n        })\n    }\n\n\n    //Get Lat & Long Coords if Search Bar Is Used\n\n    getCoords = async (location) => {\n        const url = `https://api.opencagedata.com/geocode/v1/json?q=${location}&key=6190521cf6754408a69404ac72161310`;\n        const response = await fetch(url)\n        const data = await response.json()\n        this.setState({\n            currentLatPosition: data.results[0].geometry.lat,\n            currentLondPosition: data.results[0].geometry.lng,\n            location\n        })\n        await this.getWeatherGeo(data.results[0].geometry.lat, data.results[0].geometry.lng)\n    }\n\n\n    getWeatherGeo = async (lat, long) => {\n        this.setState({\n            weatherDataLoaded: false\n        })\n        const url = `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${long}&exclude=hourly&units=metric&appid=${API_KEY}`\n        const response = await fetch(url)\n        const data = await response.json()\n        console.log(data.daily[0])\n\n        this.setState({\n            todayWeather: data.daily[0],\n            tomorrowWeather: data.daily[1],\n            dayAfterTomWeather: data.daily[2],\n        })\n        \n        if(this.state.currentSelected === 'today' ) {\n            this.setState({\n                weatherData: data.daily[0],\n                weatherDataLoaded: true\n            })\n        } else if(this.state.currentSelected === 'tomorrow') {\n            this.setState({\n                weatherData: data.daily[1],\n                weatherDataLoaded: true\n            })\n        } if(this.state.currentSelected === 'dayAfterTomorrow') {\n            this.setState({\n                weatherData: data.daily[2],\n                weatherDataLoaded: true\n            })\n        }\n       \n    }\n\n    \n    calculateDate = (chosenDay) => {\n        const days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n        const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\n        const date = new Date()\n        const tomorrow = () => {\n            const x = new Date();\n            x.setDate(new Date().getDate()+1);\n            return x\n        }\n        const dayAfterTomorrow = () => {\n            const x = new Date();\n            x.setDate(new Date().getDate()+2);\n            return x\n        }\n\n        if(chosenDay === 'today' ) {\n            this.setState({\n                setDate : days[date.getDay()] + ' ' + date.getDate() + ' ' + months[date.getMonth()] + ' ' + date.getFullYear()\n            })\n        } else if( chosenDay === 'tomorrow' ) {\n             this.setState({\n                 setDate: days[tomorrow().getDay()] + ' ' + tomorrow().getDate() + ' ' + months[tomorrow().getMonth()] + ' ' + tomorrow().getFullYear() \n             })\n        } else if(chosenDay === 'dayAfterTomorrow'){\n            this.setState({\n                setDate: days[dayAfterTomorrow().getDay()] + ' ' + dayAfterTomorrow().getDate() + ' ' + months[dayAfterTomorrow().getMonth()] + ' ' + dayAfterTomorrow().getFullYear()  \n            })\n        }\n\n        if(this.state.weatherDataLoaded){\n            if(this.state.currentSelected === 'today' ) {\n                this.setState({\n                    weatherData: this.state.todayWeather,\n                    weatherDataLoaded: true\n                })\n            } else if(this.state.currentSelected === 'tomorrow') {\n                this.setState({\n                    weatherData: this.state.tomorrowWeather,\n                    weatherDataLoaded: true\n                })\n            } if(this.state.currentSelected === 'dayAfterTomorrow') {\n                this.setState({\n                    weatherData: this.state.dayAfterTomWeather,\n                    weatherDataLoaded: true\n                })\n            }\n        }\n    }\n\n    \n\n    render(){\n        const { classes, onHandleSearchChange } = this.props;\n        const { weatherData, weatherDataLoaded, setDate, currentSelected } = this.state;\n\n        return(\n                <Grid container spacing={1} style={{margin: '0 auto', backgroundColor: '#ecf0f3'}}>\n                    <Grid item xs={12} className={classes.root}>\n                        <Paper elevation={0} className={classes.paper} style={{backgroundColor: '#ecf0f3'}}>\n                            <Grid container style={{height: '100%'}} justify='center'>\n                                <Grid item xs={12}>\n                                    <Grid container spacing={2} justify='space-between'>\n                                        <Search \n                                            searchWeather={this.searchWeather} \n                                            onHandleSearchChange={onHandleSearchChange}\n                                            getLocation={this.getLocation}\n                                        />\n                                        <Toggle/>\n                                    </Grid>\n                                </Grid>\n                                <Grid container spacing={10}>\n                                    <WeatherIcon weatherData={weatherData} weatherDataLoaded={weatherDataLoaded}/>\n                                    <WeatherWind weatherData={weatherData} weatherDataLoaded={weatherDataLoaded}/>\n                                </Grid>\n                                <Grid item xs={9}>\n                                    <LocationDetails \n                                        setDate={setDate}\n                                        location={this.state.location}\n                                        weatherData={weatherData}\n                                        currentSelected={currentSelected}\n                                        weatherDataLoaded={weatherDataLoaded}\n                                    />\n                                </Grid>\n                                <Grid container spacing={3}>\n                                    <WeatherToday onHandleSelected={this.onHandleSelected} currentSelected={this.state.currentSelected}/>\n                                    <WeatherTom onHandleSelected={this.onHandleSelected} currentSelected={this.state.currentSelected} / >\n                                    <WeatherDayAfterTom onHandleSelected={this.onHandleSelected} currentSelected={this.state.currentSelected}/>\n                                </Grid>\n                            </Grid>\n                        </Paper>\n                    </Grid>\n                </Grid>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(Styles)(App));","import { CHANGE_SEARCHFIELD } from './constants';\n\nexport const setSearchField = (text) => ({\n    type: CHANGE_SEARCHFIELD,\n    payload: text\n})\n\n","export const CHANGE_SEARCHFIELD = 'CHANGE_SEARCHFIELD'","export const Styles = theme => ({\n    root: {\n      flexGrow: 1,\n      marginTop: '1rem',\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'space-around'\n    },\n    paper: {\n      margin: '0 auto',\n      textAlign: 'center',\n      height: '90vh',\n      width: '90vw'\n    },\n  });\n\n  ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { CHANGE_SEARCHFIELD } from './constants';\n\nconst initialState = {\n    searchField: ''\n}\n\nexport const searchLocation = (state = initialState, action = {}) => {\n    switch(action.type) {\n        case CHANGE_SEARCHFIELD:\n            return { ...state, searchField: action.payload }\n        default: \n            return state;\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport './index.css';\nimport App from './Containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport { searchLocation } from './reducers';\n\nconst store = createStore(searchLocation);\n\nReactDOM.render(\n    <Provider store={store} >\n      <App/>\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}